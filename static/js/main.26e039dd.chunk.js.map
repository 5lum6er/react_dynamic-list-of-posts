{"version":3,"sources":["components/User/User.tsx","components/Comment/Comment.tsx","components/CommentList/CommentList.tsx","components/Post/Post.tsx","components/PostList/PostList.tsx","api/api.ts","App.tsx","index.tsx"],"names":["User","props","userData","className","name","email","address","city","street","Comment","comment","body","CommentList","comments","map","currentComment","key","id","Post","post","title","user","PostList","posts","currentPost","getPreparedPosts","a","fetch","then","response","json","users","find","userId","filter","postId","App","useState","setPosts","isLoaded","setIsLoaded","searchValue","setSearchValue","handleStart","data","length","disabled","type","onClick","onChange","event","value","target","onKeyUp","keyCode","prev","sort","b","Number","includes","placeholder","ReactDOM","render","document","getElementById"],"mappings":"sVAOaA,G,wBAA4B,SAACC,GAAW,IAC3CC,EAAaD,EAAbC,SAER,OACE,yBAAKC,UAAU,QACb,uBAAGA,UAAU,cAAcD,EAASE,MACpC,2BAAIF,EAASG,OACb,qCAAOH,EAASI,QAAQC,KAAxB,YAAgCL,EAASI,QAAQE,YCR1CC,EAA2B,SAACR,GAAW,IAC1CS,EAAYT,EAAZS,QAER,OACE,wBAAIP,UAAU,iBACZ,uBAAGA,UAAU,sBAAsBO,EAAQN,MAC3C,2BAAIM,EAAQL,OACZ,2BAAIK,EAAQC,QCNLC,EAA0C,SAACX,GAAW,IACzDY,EAAaZ,EAAbY,SAER,OACE,oCACGA,EAASC,KAAI,SAACC,GAAD,OACZ,kBAAC,EAAD,CAASL,QAASK,EAAgBC,IAAKD,EAAeE,UCJjDC,EAA4B,SAACjB,GAAW,IAC3CkB,EAASlB,EAATkB,KAER,OACE,yBAAKhB,UAAU,QACb,4BAAKgB,EAAKC,OACV,2BAAID,EAAKR,MAET,kBAAC,EAAD,CAAMT,SAAUiB,EAAKE,OAErB,wBAAIlB,UAAU,kBACZ,kBAAC,EAAD,CAAaU,SAAUM,EAAKN,cCZvBS,EAA4B,SAACrB,GAAW,IAC3CsB,EAAUtB,EAAVsB,MAER,OACE,wBAAIpB,UAAU,SAEVoB,EAAMT,KAAI,SAACU,GAAD,OACR,wBAAIR,IAAKQ,EAAYP,IACnB,kBAAC,EAAD,CAAME,KAAMK,U,OCZXC,EAAgB,uCAAG,gCAAAC,EAAA,sEACVC,MALJ,6EAKqBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UADjC,cACxBP,EADwB,gBAEVI,MALJ,6EAKqBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFjC,cAExBC,EAFwB,gBAGPJ,MALJ,gFAKwBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAHvC,cAGxBjB,EAHwB,yBAKvBU,EAAMT,KAAI,SAACK,GAAD,mBAAC,eACbA,GADY,IAEfE,KAAMU,EAAMC,MAAK,SAACX,GAAD,OAAgBA,EAAKJ,KAAOE,EAAKc,UAClDpB,SAAUA,EAASqB,QAAO,SAACxB,GAAD,OAAsBA,EAAQyB,SAAWhB,EAAKF,YAR5C,4CAAH,qDC+DdmB,EA9DO,WAAO,IAAD,EACAC,mBAAiB,IADjB,mBACnBd,EADmB,KACZe,EADY,OAEMD,oBAAkB,GAFxB,mBAEnBE,EAFmB,KAETC,EAFS,OAGYH,mBAAiB,IAH7B,mBAGnBI,EAHmB,KAGNC,EAHM,KAKpBC,EAAW,uCAAG,sBAAAjB,EAAA,6DAClBc,GAAY,GADM,SAGZf,IAAmBG,MAAK,SAAAgB,GAAI,OAAIN,EAASM,MAH7B,2CAAH,qDAsBjB,OACE,yBAAKzC,UAAU,OACb,oDAEA,2BACE,yCACCoB,EAAMsB,QAGU,IAAjBtB,EAAMsB,OAEJ,4BACEC,SAAUP,EACVQ,KAAK,SACLC,QAASL,GAEPJ,EAAoB,aAAT,QAIf,oCACE,2BACEQ,KAAK,OACLE,SAvCS,SAACC,GAAgD,IAC5DC,EAAUD,EAAME,OAAhBD,MAERT,EAAeS,IAqCLA,MAAOV,EACPY,QAnCQ,SAACH,GACG,KAAlBA,EAAMI,SACRhB,GAAS,SAAAiB,GAAI,OACX,YAAIA,GAAMC,MAAK,SAAC9B,EAAG+B,GAAJ,OACbC,OAAOD,EAAErC,MAAMuC,SAASlB,IAAgBiB,OAAOhC,EAAEN,MAAMuC,SAASlB,WAgC5DmB,YAAY,iCAEd,kBAAC,EAAD,CAAUrC,MAAOA,OCvD7BsC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.26e039dd.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\n\ntype UserProps = {\n  userData: User;\n};\n\nexport const User: React.FC<UserProps> = (props) => {\n  const { userData } = props;\n\n  return (\n    <div className=\"user\">\n      <p className=\"user__name\">{userData.name}</p>\n      <p>{userData.email}</p>\n      <p>{`${userData.address.city} ${userData.address.street}`}</p>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  comment: Comment;\n};\n\nexport const Comment: React.FC<Props> = (props) => {\n  const { comment } = props;\n\n  return (\n    <li className=\"wrapper__list\">\n      <p className=\"wrapper__list-head\">{comment.name}</p>\n      <p>{comment.email}</p>\n      <p>{comment.body}</p>\n    </li>\n  );\n};\n","import React from 'react';\nimport { Comment } from '../Comment/Comment';\n\ntype CommentListProps = {\n  comments: Comment[];\n};\n\nexport const CommentList: React.FC<CommentListProps> = (props) => {\n  const { comments } = props;\n\n  return (\n    <>\n      {comments.map((currentComment) => (\n        <Comment comment={currentComment} key={currentComment.id} />\n      ))}\n    </>\n  );\n};\n","import React from 'react';\nimport './Post.css';\nimport { User } from '../User/User';\nimport { CommentList } from '../CommentList/CommentList';\n\ntype PostProps = {\n  post: Post;\n};\n\nexport const Post: React.FC<PostProps> = (props) => {\n  const { post } = props;\n\n  return (\n    <div className=\"post\">\n      <h2>{post.title}</h2>\n      <p>{post.body}</p>\n\n      <User userData={post.user} />\n\n      <ul className=\"post__comments\">\n        <CommentList comments={post.comments} />\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './PostList.css';\nimport { Post } from '../Post/Post';\n\ntype Props = {\n  posts: Post[];\n};\n\nexport const PostList: React.FC<Props> = (props) => {\n  const { posts } = props;\n\n  return (\n    <ul className=\"posts\">\n      {\n        posts.map((currentPost) => (\n          <li key={currentPost.id}>\n            <Post post={currentPost} />\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n","const POSTS_URL = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/posts.json';\nconst USERS_URL = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/users.json';\nconst COMMENTS_URL = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/comments.json';\n\nexport const getPreparedPosts = async (): Promise<Post[]> => {\n  const posts = await fetch(POSTS_URL).then(response => response.json());\n  const users = await fetch(USERS_URL).then(response => response.json());\n  const comments = await fetch(COMMENTS_URL).then(response => response.json());\n\n  return posts.map((post: Post) => ({\n    ...post,\n    user: users.find((user: User) => user.id === post.userId),\n    comments: comments.filter((comment: Comment) => comment.postId === post.id),\n  }));\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { PostList } from './components/PostList/PostList';\nimport { getPreparedPosts } from './api/api';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const handleStart = async () => {\n    setIsLoaded(true);\n\n    await getPreparedPosts().then(data => setPosts(data));\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setSearchValue(value);\n  };\n\n  const handleEnter = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) {\n      setPosts(prev => (\n        [...prev].sort((a, b) => (\n          Number(b.title.includes(searchValue)) - Number(a.title.includes(searchValue))\n        ))\n      ));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Static list of posts</h1>\n\n      <p>\n        <span>posts: </span>\n        {posts.length}\n      </p>\n\n      { posts.length === 0\n        ? (\n          <button\n            disabled={isLoaded}\n            type=\"button\"\n            onClick={handleStart}\n          >\n            {!isLoaded ? 'Load' : 'Loading...'}\n          </button>\n        )\n        : (\n          <>\n            <input\n              type=\"text\"\n              onChange={handleChange}\n              value={searchValue}\n              onKeyUp={handleEnter}\n              placeholder=\"Type word(s) and press Enter\"\n            />\n            <PostList posts={posts} />\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}